<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>H5Webs on OverlookArt</title><link>http://example.org/h5web/</link><description>Recent content in H5Webs on OverlookArt</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>OverlookArt</copyright><lastBuildDate>Mon, 06 Mar 2023 17:55:48 +0800</lastBuildDate><atom:link href="http://example.org/h5web/index.xml" rel="self" type="application/rss+xml"/><item><title>VueECharts</title><link>http://example.org/h5web/vueecharts/</link><pubDate>Mon, 06 Mar 2023 17:55:48 +0800</pubDate><guid>http://example.org/h5web/vueecharts/</guid><description>基于VUE3 下的 ECharts 安装 # 安装必要依赖 @vue/composition-api $ npm i -D @vue/composition-api # 安装 echarts $ npm install echarts vue-echarts 使用 &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;v-chart style=&amp;#34;height: 400px;&amp;#34; :option=&amp;#34;option&amp;#34; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script setup&amp;gt; // 导入 echarts 核心模块，该模块为使用 echarts 提供必要的接口。 import * as echarts from &amp;#34;echarts/core&amp;#34;; // 导入 echarts 折线图或者其他图表, 全部图表使用 Chart import { LineChart } from &amp;#34;echarts/charts&amp;#34;; // 导入矩形坐标系组件，全部组件使用 Component import { GridComponent } from &amp;#34;echarts/components&amp;#34; // 导入 echarts 画布渲染器 import { CanvasRenderer } from &amp;#34;echarts/renderers&amp;#34;; // 注册 echarts 所需要的组件 echarts.</description></item><item><title>Sortablejs+ElTable 拖拽</title><link>http://example.org/h5web/vue3sortablejseltable/</link><pubDate>Mon, 27 Feb 2023 11:29:51 +0800</pubDate><guid>http://example.org/h5web/vue3sortablejseltable/</guid><description>Sortablejs+ElTable 拖拽 element plus + sortablejs 实现表格拖拽功能
安装 sortablejs $ npm i sortablejs --save 在 Vue 中引入 sortablejs import Sortable from &amp;#34;sortablejs&amp;#34; 为拖拽的 table 配置 ref 和 row-key // row-key 设置为 table 数据源中能标识每一行唯一性的字段 &amp;lt;el-table :data=&amp;#34;datas&amp;#34; ref=&amp;#34;dragTable&amp;#34; row-key=&amp;#34;rowId&amp;#34;&amp;gt; &amp;lt;/el-table&amp;gt; const dragTable = ref(); 创建拖拽表格实例 const createDragTable = () =&amp;gt; { //引用的元素 通过 css 选择器 查到 table 元素 var table = dragTable.value.$el.querySelector(&amp;#39;.el-table__body-wrapper tbody&amp;#39;); if(!table){ return; } //创建表格拖拽 var dTable = Sortable.create(table, { animation:150, onStart: () =&amp;gt; { //开始拖拽 }, onMove: (val) =&amp;gt; { /** * 拖拽中 * val.</description></item><item><title>Vue3 对 Dom 元素的引用</title><link>http://example.org/h5web/vue3domref/</link><pubDate>Mon, 27 Feb 2023 11:13:38 +0800</pubDate><guid>http://example.org/h5web/vue3domref/</guid><description>Vue3中对Dom元素引用 基本引用 在 html 中设置要引用元素的 ref &amp;lt;el-form ref=&amp;#34;formRef&amp;#34;/&amp;gt; 在脚本中声明并使用 // 声明对表单的引用 const formRef = ref(); //清除表单的验证字段 formRef.value.clearValidate([&amp;#39;name&amp;#39;]); 高级引用 在 html 中设置动态的 ref &amp;lt;el-tree :ref=&amp;#34;(el) =&amp;gt; setTreeRef(el, index)&amp;#34;/&amp;gt; 在脚本中声明并使用 //声明存储引用的数组 var refTrees = []; // 实现动态设置 ref 的方法,并将引用存储 const setTreeRef(el, index) =&amp;gt; { // 判断 dom 元素是否有效 if (el) { // 以 className 的方式为元素设置标记 el.className = &amp;#39;ref-tree-&amp;#39; + index; // 储存到引用数组中 refTrees.push(el); } } // 使用动态引用 const useTreeRef(index) =&amp;gt; { var refTree; refTrees.</description></item><item><title>Node 版本管理</title><link>http://example.org/h5web/nodeversionmanage/</link><pubDate>Mon, 27 Feb 2023 11:02:34 +0800</pubDate><guid>http://example.org/h5web/nodeversionmanage/</guid><description>Node 版本管理 全局安装 n $ npm install -g n 安装最新版 $ n latest 安装最新稳定版 $ n stable 安装某个版本 $ n 10.13.0 删除某个版本 $ n rm 10.13.0 切换版本 $ n 10.13.0 以指定的版本来执行脚本 $ n use 10.13.0 test.js 查看已安装版本 $ n ls 查看服务器上所有可用的版本 $ n ls-remote --all</description></item><item><title>Javascript 常用脚本</title><link>http://example.org/h5web/javascript/</link><pubDate>Mon, 27 Feb 2023 10:27:01 +0800</pubDate><guid>http://example.org/h5web/javascript/</guid><description>Javascript 常用脚本 格式化时间[Date] Date.prototype.Format = function (fmt) { //author: meizz var o = { &amp;#34;M+&amp;#34;: this.getMonth() + 1, //月份 &amp;#34;d+&amp;#34;: this.getDate(), //日 &amp;#34;h+&amp;#34;: this.getHours(), //小时 &amp;#34;m+&amp;#34;: this.getMinutes(), //分 &amp;#34;s+&amp;#34;: this.getSeconds(), //秒 &amp;#34;q+&amp;#34;: Math.floor((this.getMonth() + 3) / 3), //季度 &amp;#34;S&amp;#34;: this.getMilliseconds() //毫秒 }; if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + &amp;#34;&amp;#34;).substr(4 - RegExp.$1.length)); for (var k in o) if (new RegExp(&amp;#34;(&amp;#34; + k + &amp;#34;)&amp;#34;).test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ?</description></item></channel></rss>